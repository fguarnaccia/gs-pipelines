pipeline {
  environment   {
      version = "0.0.0"
      suffix = "-devnewpipe"
      tbbranch = "develop"  
      erpbranch = "${env.tbbranch}"
      giturl= "https://github.com/Microarea/" 
      tag = "${env.version}.${env.BUILD_ID}${env.suffix}"
      internationalstudiopath = "C:\\Program Files (x86)\\Microarea\\InternationalStudio\\InternationalStudio.exe"
      tagongit = 'true'     
      commitmessage = "Jenkins tag ${env.BUILD_ID} ${env.tag}" 
    }
  
    agent any 
    stages {
          stage('PrepareFolders') { 
                steps {
                // cleanWs deleteDirs: true
                powershell label: 'Create Standard folder', script: 'if (-not (Test-Path "Standard")) {New-Item -ItemType "directory" -Path "Standard"}'
                powershell label: 'Create Applications folder', script: 'if (-not (Test-Path "Standard\\Applications")) {New-Item -ItemType "directory" -Path "Standard\\Applications"}'
                powershell label: 'Create Apps folder', script: 'if (-not (Test-Path "Apps")) {New-Item -ItemType "directory" -Path "Apps"}'
                powershell label: 'Create BuildArtifacts folder', script: 'if (-not (Test-Path "buildartifacts")) {New-Item -ItemType "directory" -Path "buildartifacts"}'

                }
            }      
          stage('Pull da git') {
            parallel{
                stage('Pull and tag tbw-taskBuilder') {
                    environment { 
                        gitrepo = "tbw-taskBuilder"
                        repofolder = "Standard\\Taskbuilder"
                        branch = "${env.tbbranch}"  
                      }             
                    steps {
                      dir ("${env.repofolder}") { 
                        git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" 
                        git tag -a -m "${env.commitmessage}" dofg-tst/$tag 
                        git push "${env.giturl}${env.gitrepo}.git" dofg-tst/$tag        
                      } }
                
                 }  
               stage('Pull and tag tbw-server') { 
                    environment { 
                        gitrepo = "tbw-server"
                        repofolder = "Standard\\server"
                        branch = "${env.tbbranch}"
                      }   
                    steps {
                        dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }     
               stage('Pull and tag tbw-client') { 
                    environment { 
                        gitrepo = "tbw-client"
                        repofolder = "Standard\\client"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git"} }
                }
               stage('Pull and tag ERP') {               
                    environment { 
                        gitrepo = "erp"
                        repofolder = "Standard\\Applications\\ERP"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
                stage('Pull and tag MDC') {               
                    environment { 
                        gitrepo = "MDC"
                        repofolder = "Standard\\Applications\\MDC"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
 
                }
                stage('Pull and tag TBF') {               
                    environment { 
                        gitrepo = "TBF"
                        repofolder = "Standard\\Applications\\TBF"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
                stage('Pull and tag mdm') {               
                    environment { 
                        gitrepo = "micro-database-management"
                        repofolder = "Standard\\micro-database-management"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
                stage('Pull and tag M4_dashboard') {               
                    environment { 
                        gitrepo = "M4_dashboard"
                        repofolder = "Standard\\Applications\\M4_dashboard"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
		            stage('Pull and tag Retail') {               
                    environment { 
                        gitrepo = "Retail"
                        repofolder = "Standard\\Applications\\Retail"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
		            stage('Pull and tag WMS') {               
                    environment { 
                        gitrepo = "WMS"
                        repofolder = "Standard\\Applications\\WMS"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git"} }
                }	
	            	stage('Pull and tag WMSRetail') {               
                    environment { 
                        gitrepo = "WMSRetail"
                        repofolder = "Standard\\Applications\\WMSRetail"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }				
		            stage('Pull and tag MyMagoStudio') {               
                    environment { 
                        gitrepo = "MyMagoStudio"
                        repofolder = "Standard\\Applications\\MyMagoStudio"
                        branch = "${env.tbbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
		            stage('Pull and tag DBCreationDlls-sqlserver') {               
                    environment { 
                        gitrepo = "DBCreationDlls-sqlserver"
                        repofolder = "Standard\\DBCreationDlls-sqlserver"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
		            stage('Pull and tag DBCreationDlls-postgres') {               
                    environment { 
                        gitrepo = "DBCreationDlls-postgres"
                        repofolder = "Standard\\DBCreationDlls-postgres"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
		            stage('Pull and tag erp-model') {               
                    environment { 
                        gitrepo = "erp-model"
                        repofolder = "Standard\\erp-model"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git"} }
                }
		            stage('Pull and tag erp-services') {               
                    environment { 
                        gitrepo = "erp-services"
                        repofolder = "Standard\\Applications\\erp-services"
                        branch = "${env.erpbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git"} }
                }				
		            stage('Pull and tag Tbf-tools') {               
                    environment { 
                        gitrepo = "Tbf-tools"
                        repofolder = "Standard\\Tbf-tools"
                        branch = "${env.tbbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }				
		            stage('Pull and tag Tbf-library') {               
                    environment { 
                        gitrepo = "Tbf-library"
                        repofolder = "Standard\\Tbf-library"
                        branch = "${env.tbbranch}"
                      }   
                    steps {
                       dir ("${env.repofolder}") { git branch: env.branch, credentialsId: 'githubccnet', url: "${env.giturl}${env.gitrepo}.git" } }
                }
				
				//le due parentesi che seguono chiudono lo stage parallel
                 }
              }    

          // stage('Dictionaries') 
          // {
            // parallel{
                stage('Build TaskBuilderWeb') {
                    environment { 
                        prjname = "TaskBuilderWeb"
                        prjfolder = "Standard\\Taskbuilder"
                      }             
                    steps {                    
                        bat """"${env.internationalstudiopath}" ${env.WORKSPACE}\\${env.prjfolder}\\${env.prjname}.tblsln"""
                        }
                 }
                stage('Build erp') {
                    environment { 
                        prjname = "erp"
                        prjfolder = "Standard\\Applications\\erp"
                      }             
                    steps {                    
                            bat """"${env.internationalstudiopath}" ${env.WORKSPACE}\\${env.prjfolder}\\${env.prjname}.tblsln"""
                          }
                 } 				 
                stage('Build server') {
                    environment { 
                        prjname = "server"
                        prjfolder = "Standard\\server"
                      }             
                    steps {                    
                        bat """"${env.internationalstudiopath}" ${env.WORKSPACE}\\${env.prjfolder}\\${env.prjname}.tblsln"""
                        }
                }    
                stage('Build client') {
                    environment { 
                        prjname = "client"
                        prjfolder = "Standard\\client"
                      }             
                    steps {                    
                        bat """"${env.internationalstudiopath}" ${env.WORKSPACE}\\${env.prjfolder}\\${env.prjname}.tblsln"""
                       }
                 }    
                stage('Build MDC') {
                    environment { 
                        prjname = "MDC"
                        prjfolder = "Standard\\Applications\\MDC"
                      }             
                    steps {                                           
                        bat """"${env.internationalstudiopath}" ${env.WORKSPACE}\\${env.prjfolder}\\${env.prjname}.tblsln""" 
                        }
                 } 
                stage('Build Retail') {
                    environment { 
                        prjname = "Retail"
                        prjfolder = "Standard\\Applications\\Retail"
                      }             
                    steps {                    
                        bat """"${env.internationalstudiopath}" ${env.WORKSPACE}\\${env.prjfolder}\\${env.prjname}.tblsln"""
                       }
                 } 
                stage('Build WMS') {
                    environment { 
                        prjname = "WMS"
                        prjfolder = "Standard\\Applications\\WMS"
                      }             
                    steps {                    
                          bat """"${env.internationalstudiopath}" ${env.WORKSPACE}\\${env.prjfolder}\\${env.prjname}.tblsln"""
                       }
                 } 
                stage('Build WMSRetail') {
                    environment { 
                        prjname = "WMSRetail"
                        prjfolder = "Standard\\Applications\\WMSRetail"
                      }             
                    steps {                    
                         bat """"${env.internationalstudiopath}" ${env.WORKSPACE}\\${env.prjfolder}\\${env.prjname}.tblsln"""
                       }
                 } 				
				//le due parentesi che seguono chiudono lo stage parallel
                //  }
              // }

          stage('Tb-json') {
              stages{
                      stage('Publish Tb-json') {
                          environment { 
                              prjfolder = "Standard\\client\\tb-json"
                              outputfolder = "${env.WORKSPACE}\\Standard\\Taskbuilder\\Framework\\TbUtility\\TbJson"	   			
                            }             
                          steps {     
                                  dir ("${env.WORKSPACE}\\${env.prjfolder}") {
                                  bat "dotnet publish -r win-x64 -c release -o  ${env.outputfolder}"}
                              }			  
                      }
            
                      stage('Compact files') {
                          environment { 
                              prjfolder = "Standard\\Taskbuilder\\Framework\\TbUtility\\TbJson"	    
                              inputfolder = "${env.WORKSPACE}\\Standard\\"	   	
                              outputfolder = "${env.WORKSPACE}\\Apps\\TBApps\\Release"			
                            }             
                          steps {     
                            dir ("${env.WORKSPACE}\\${env.prjfolder}") 
                                { bat "TbJson.exe /compact ${env.inputfolder} ${env.outputfolder}" }
                          }			  
                        }
                }			  
			      }

          stage('archive') {
                steps {
                      dir('Apps') {
                            archiveArtifacts artifacts: '**'
                                 }
                      }
            }

			  
          stage('PostandTag') {
                when {
                  environment name: 'tagongit', value: 'true'
                }
                steps {
                      echo "Built ${env.tag}" 
                      echo "Msg ${commitmessage}"
                }
            }
    }}
